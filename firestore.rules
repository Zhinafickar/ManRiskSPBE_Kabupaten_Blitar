rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthed() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthed() && request.auth.uid == userId;
    }
    
    function getUserRole(uid) {
      return get(/databases/$(database)/documents/users/$(uid)).data.role;
    }
    
    function isAuthedUserOneOfRoles(roles) {
        return isAuthed() && getUserRole(request.auth.uid) in roles;
    }

    match /users/{userId} {
      // ANYONE can query (`list`) the users collection to check for role availability.
      // This is required for the "isRoleTaken" feature on the registration page.
      // NOTE: This makes user data (name, email, role) publicly readable in queries.
      allow list: if true; 
      
      // Authenticated users can read (`get`) any single user profile.
      allow get: if isAuthed();
      
      // A user can create their OWN user document.
      allow create: if isOwner(userId);

      // A user can update their OWN document, or a superadmin can update ANY document.
      allow update: if isOwner(userId) || isAuthedUserOneOfRoles(['superadmin']);

      // Only a superadmin can delete user documents.
      allow delete: if isAuthedUserOneOfRoles(['superadmin']);
    }

    match /surveys/{surveyId} {
      // An Admin/Superadmin can get ANY survey. A user can get THEIR OWN survey.
      allow get: if isAuthed() && (isAuthedUserOneOfRoles(['admin', 'superadmin']) || resource.data.userId == request.auth.uid);

      // An Admin/Superadmin can list ALL surveys.
      // A user CANNOT list all surveys. They must query for their own. The client-side
      // query `where('userId', '==', auth.uid)` is what filters the data. The security rule
      // here just allows the query operation itself to proceed for any authenticated user.
      // The `get` rule above provides the actual document-level security. If a user tries
      // to list all documents, the query will fail because it would return documents
      // they are not allowed to `get`. This is how Firestore secures queries.
      allow list: if isAuthed();

      // A user can create a survey for themselves.
      allow create: if isOwner(request.resource.data.userId);

      // Surveys cannot be changed.
      allow update, delete: if false;
    }
  }
}
