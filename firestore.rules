rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin or superadmin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Rules for the users collection
    match /users/{userId} {
      // Any authenticated user can create their own profile.
      // Admins can read all profiles.
      // Users can read/update their own profile.
      allow read, update: if request.auth.uid == userId || isAdmin();
      allow create: if request.auth != null;
      allow delete: if isAdmin(); // Only admins can delete users
    }

    // Rules for the roles collection (departmental role locks)
    match /roles/{role} {
       // Any authenticated user can create a role lock during registration.
       // Only admins can read all role locks.
      allow read, delete: if isAdmin();
      allow create: if request.auth != null;
    }

    // Rules for the surveys collection
    match /surveys/{surveyId} {
        // Admins can read/delete any survey.
        // Users can read/create/delete their own surveys.
      allow read, delete: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth != null;
    }
    
    // Rules for the continuityPlans collection
    match /continuityPlans/{planId} {
        // Admins can read/delete any plan.
        // Users can read/create/delete their own plans.
      allow read, delete: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth != null;
    }

    // Rules for the adminTokens collection
    match /adminTokens/{tokenId} {
        // Only admins/superadmins can manage tokens
      allow read, create, delete: if isAdmin();
    }
  }
}
