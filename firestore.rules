
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSuperAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow unauthenticated users to query the users collection ONLY to check for unique roles during registration.
      // Admins and Superadmins can also list users for management purposes.
      allow list: if request.auth == null || (request.auth != null && isAdmin());

      // Allow anyone to create a user profile for themselves when they sign up.
      allow create: if request.auth != null && isOwner(userId);
      
      // Allow users to get their own profile. Admins/Superadmins can get any profile.
      allow get: if request.auth != null && (isOwner(userId) || isAdmin());

      // Users can update their own data. Superadmins can update anyone's data.
      allow update: if request.auth != null && (isOwner(userId) || isSuperAdmin());
      
      // Only superadmins can delete user documents.
      allow delete: if request.auth != null && isSuperAdmin();
    }

    match /surveys/{surveyId} {
      // Allow authenticated users to create surveys for themselves.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;

      // Users can read their own surveys. Admins/Superadmins can read all surveys.
      allow read: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());

      // Surveys cannot be updated or deleted from the client to ensure data integrity.
      allow update, delete: if false;
    }
  }
}
