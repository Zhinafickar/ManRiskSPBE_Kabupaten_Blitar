rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users can create, read, and update their own profile.
    // Superadmins can read and update any user profile.
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, update: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin');
      
      // A superadmin can delete any user.
      // A new user registration can trigger a delete on a stale, unverified user account (older than 1 minute).
      allow delete: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin' || 
        (exists(/databases/$(database)/documents/roles/$(resource.data.role)) && get(/databases/$(database)/documents/roles/$(resource.data.role)).data.createdAt < request.time - duration.value(60, 's')));
    }

    // Roles can be read by anyone (for registration availability check).
    // Authenticated users can create a role (on registration).
    // Superadmins can update/delete roles (when managing users).
    // Stale roles can be deleted during a new registration.
    match /roles/{roleId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';

      // A superadmin can delete a role.
      // A new user registration can trigger a delete on a stale role reservation (older than 1 minute).
      allow delete: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin' || 
        resource.data.createdAt < request.time - duration.value(60, 's'));
    }

    // Users can create surveys for themselves.
    // Users can read/delete their own surveys.
    // Admins and Superadmins can read/delete any survey.
    match /surveys/{surveyId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, delete: if request.auth != null && (
        resource.data.userId == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin']
      );
      allow update: if false; // No survey editing functionality in the app yet.
    }
  }
}
