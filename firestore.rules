
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // == Helper Functions ==
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isSuperAdmin() {
      return isSignedIn() && getUserRole() == 'superadmin';
    }

    function isAdmin() {
      return isSignedIn() && (getUserRole() == 'admin' || isSuperAdmin());
    }

    // == Collection: users ==
    match /users/{userId} {
      // FIX: Allow unauthenticated users to query the collection.
      // This is REQUIRED for the registration page to check if a role is already taken.
      // Without this rule, the `isRoleTaken` function will always fail with a permission error.
      allow list: if true;

      // Allow authenticated users to get their own profile.
      // Admins and Superadmins can get any user's profile.
      allow get: if isOwner(userId) || isAdmin();
      
      // Allow a new user to create their own profile document.
      // The document ID must match their auth UID.
      allow create: if isOwner(userId);

      // A user can update their own data. Admins/Superadmins can update any user.
      allow update: if isOwner(userId) || isAdmin();

      // Only Superadmins can delete user documents.
      allow delete: if isSuperAdmin();
    }

    // == Collection: surveys ==
    match /surveys/{surveyId} {
      // Users can read their own surveys. Admins/Superadmins can read all surveys.
      allow read: if isSignedIn() && (resource.data.userId == request.auth.uid || isAdmin());
      
      // Users can create surveys and must correctly set their own userId.
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      
      // Surveys cannot be updated or deleted by anyone to ensure data integrity.
      allow update, delete: if false; 
    }
  }
}
