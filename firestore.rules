rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin/superadmin roles
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // users:
    // - Anyone authenticated can read user list for role info.
    // - Users can create their own profile.
    // - Users can update their own data.
    // - Superadmins can update/delete any user.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }

    // roles:
    // - Used as a lock to prevent multiple users from taking the same department role.
    // - Anyone can read to check for available roles during registration.
    // - Only the assigned user or an admin can create/delete the lock.
    match /roles/{role} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == resource.data.uid 
                      || request.auth.uid == request.resource.data.uid 
                      || isAdmin();
    }
    
    // surveys & continuityPlans:
    // - Anyone authenticated can read all data for reporting and analytics.
    // - Users can only write/delete their own documents.
    // - Admins/Superadmins can delete any document.
    match /surveys/{surveyId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }

    match /continuityPlans/{planId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}
