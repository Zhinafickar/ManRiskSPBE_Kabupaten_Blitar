
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin or superadmin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Users can read/write their own profile, admins can read all profiles.
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }

    // Anyone can read the list of taken roles for the registration form.
    // Only authenticated users can create a role lock (on registration).
    // Only the user who owns the lock or an admin can delete it.
    match /roles/{roleId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && (resource.data.uid == request.auth.uid || isAdmin());
    }

    // Risk categories are public to populate forms. Only admins can modify them.
    match /risk_categories/{categoryId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Surveys can be created by any authenticated user.
    // They can only be read or deleted by the user who created them or an admin.
    match /surveys/{surveyId} {
      allow create: if request.auth != null;
      allow read, delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Continuity plans can be created by any authenticated user.
    // They can only be read or deleted by the user who created them or an admin.
    match /continuityPlans/{planId} {
      allow create: if request.auth != null;
      allow read, delete: if request.auth != null && (resource.data.userId == request.auth.uid || isAdmin());
    }

    // Admin tokens should only be managed by superadmins.
    match /adminTokens/{tokenId} {
      allow read, create, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }
  }
}
