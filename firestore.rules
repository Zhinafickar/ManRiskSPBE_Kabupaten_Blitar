rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin roles
    function isAdmin() {
      // Check if the user is authenticated before trying to access their data
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Users can be read by any authenticated user.
    // Only the user themselves or an admin can write to their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // Roles collection should be public-readable to allow new users to see which OPDs are taken.
    // Write access is still restricted.
    match /roles/{role} {
      allow read: if true;
      allow create, update, delete: if request.auth != null;
    }

    // Surveys can be read by admins.
    // Users can manage their own surveys.
    match /surveys/{surveyId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
    
    // Continuity plans follow the same logic as surveys.
    match /continuityPlans/{planId} {
       allow read: if request.auth != null;
       allow create: if request.auth.uid == request.resource.data.userId;
       allow update, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}
