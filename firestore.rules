rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isSuperAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    match /users/{userId} {
      // Allow anyone to read user data. THIS IS A SECURITY TRADE-OFF.
      // It is required for the client-side `isRoleTaken` check during registration to function.
      // In a production app, this should be replaced with a Cloud Function.
      allow read: if true;

      // A user can create their own profile document.
      allow create: if isOwner(userId);
      
      // A user can update their own profile, or a superadmin can update any profile.
      allow update: if isOwner(userId) || isSuperAdmin();

      // Only superadmins can delete user profiles.
      allow delete: if isSuperAdmin();
    }

    match /surveys/{surveyId} {
      // Admins and Superadmins can read all surveys.
      // Other users can only read surveys they created.
      allow read: if isAdmin() || isSuperAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      
      // Any signed-in user can create a survey.
      allow create: if isSignedIn();
      
      // Surveys are immutable; no updates or deletes allowed from the client.
      allow update, delete: if false;
    }
  }
}
