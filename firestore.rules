
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isSignedIn() && getUserRole() in ['admin', 'superadmin'];
    }
    
    function isSuperAdmin() {
        return isSignedIn() && getUserRole() == 'superadmin';
    }

    // --- Collection Rules ---

    // Anyone can create a user document (register).
    // Authenticated users can read the list (e.g., to check for available roles).
    // Only the owner or a superadmin can update/delete.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if true;
      allow update, delete: if isOwner(userId) || isSuperAdmin();
    }
    
    // Anyone can create a role lock during registration.
    // Admins can view role assignments.
    // Superadmins can delete role locks (when deleting a user).
    match /roles/{role} {
      allow get: if isSignedIn();
      allow list: if isAdmin();
      allow create: if true;
      allow delete: if isSuperAdmin();
    }
    
    // Anyone can attempt to read tokens for verification.
    // Only Superadmins can create or delete tokens.
    match /adminTokens/{tokenId} {
        allow get, list: if true;
        allow create, delete: if isSuperAdmin();
    }

    // Surveys can only be managed by the user who created them or an admin.
    match /surveys/{surveyId} {
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if isOwner(resource.data.userId) || isSuperAdmin();
    }

    // Continuity plans follow the same logic as surveys.
    match /continuityPlans/{planId} {
       allow read: if isOwner(resource.data.userId) || isAdmin();
       allow create: if isSignedIn();
       allow update, delete: if isOwner(resource.data.userId) || isSuperAdmin();
    }
  }
}
