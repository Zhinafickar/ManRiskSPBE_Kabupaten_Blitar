rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user has a specific role
    function isRole(role) {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // --- User and Role Management ---

    match /users/{userId} {
      // Allow user creation during registration. Any authenticated user can create a user doc.
      // The app logic ensures they only create their own document with their own UID.
      allow create: if request.auth != null;
      
      // A user can read/update their own data. A superadmin can read/update any user's data.
      allow read, update: if request.auth.uid == userId || isRole('superadmin');
      
      // Only a superadmin can delete a user's data from Firestore.
      allow delete: if isRole('superadmin');
    }

    match /roles/{role} {
      // Allow role creation during registration.
      // This rule ensures the 'uid' field inside the new role document matches the person creating it.
      allow create: if request.auth != null && request.resource.data.uid == request.auth.uid;
      
      // Anyone can read the roles collection to check for availability.
      allow read: if true;

      // A role document can be updated or deleted by a superadmin (e.g., when managing users).
      allow update, delete: if isRole('superadmin');
    }

    // --- Survey Data Management ---

    match /surveys/{surveyId} {
      // Any authenticated user can create a survey.
      allow create: if request.auth != null;
      
      // Users can read/delete their own surveys.
      // Admins and Superadmins can read/delete any survey.
      allow read, delete: if (resource.data.userId == request.auth.uid) || 
                           isRole('admin') || 
                           isRole('superadmin');
    }
  }
}
