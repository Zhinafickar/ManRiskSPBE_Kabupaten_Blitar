rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // --- Public read-only data ---
    // Anyone can read this data, useful for populating forms/UI elements.
    function isPublicData(collection) {
      return collection in ['riskEvents', 'frequencyLevels', 'impactMagnitudes'];
    }
    match /{collection}/{docId}
    where isPublicData(collection) {
      allow get, list: if true;
    }

    // --- User-specific access ---
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users collection:
    // - Authenticated users can create their own profile
    // - Authenticated users can read their own profile
    // - Admins/superadmins can read all profiles
    match /users/{userId} {
      allow create: if isSignedIn();
      allow read, update: if isOwner(userId) || isSuperAdmin();
      allow list, delete: if isSuperAdmin();
    }
    
    // --- Role-based access ---
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }
    function isAdmin() {
      let role = getUserRole();
      return isSignedIn() && (role == 'admin' || role == 'superadmin');
    }
     function isSuperAdmin() {
      let role = getUserRole();
      return isSignedIn() && role == 'superadmin';
    }
    
    // Surveys collection:
    // - Authenticated users can create surveys for themselves.
    // - Users can read/update/delete their own surveys.
    // - Admins can read all surveys.
    match /surveys/{surveyId} {
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow read, update: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow list: if isAdmin();
    }
    
    // Continuity Plans collection (similar to surveys)
    match /continuityPlans/{planId} {
       allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
       allow read, update: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
       allow delete: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
       allow list: if isAdmin();
    }

    // Roles collection (for locking department roles to a single user)
    // - Any signed-in user can create a role lock (on registration).
    // - Superadmins can delete role locks (when deleting a user).
    match /roles/{roleId} {
       allow create: if isSignedIn();
       allow read: if isSignedIn();
       allow delete: if isSuperAdmin();
    }

    // Admin Token collection
    // - Superadmins can manage tokens (create, read, delete).
    // - ANYONE can read tokens (required for the pre-login/pre-reg verification step).
    match /adminTokens/{tokenId} {
      allow read, list: if true;
      allow create, update, delete: if isSuperAdmin();
    }
  }
}
