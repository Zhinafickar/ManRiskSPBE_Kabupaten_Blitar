
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is superadmin
    function isSuperAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'superadmin';
    }

    // Helper function to check if a user is admin or superadmin
    function isAdminOrSuperAdmin() {
      let userRole = get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             (userRole == 'admin' || userRole == 'superadmin');
    }

    // Users collection rules
    // - Anyone can create their own user document during signup.
    // - Users can read their own profile.
    // - Superadmins can read, update, and delete any user profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isSuperAdmin();
      allow create: if request.auth.uid == userId;
      allow update, delete: if isSuperAdmin();
    }

    // Roles collection rules
    // - A user can create a role for themselves during signup.
    // - Superadmins can manage (read, update, delete) all roles.
    match /roles/{role} {
      // allow create for any authenticated user, to handle registration
      allow create: if request.auth.uid != null;
      // allow read, update, delete only for superadmins
      allow read, update, delete: if isSuperAdmin();
    }

    // Surveys collection rules
    // - Users can create surveys for themselves.
    // - Users can read and delete their own surveys.
    // - Admins and Superadmins can read and delete all surveys.
    match /surveys/{surveyId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, delete: if request.auth.uid == resource.data.userId || isAdminOrSuperAdmin();
    }

    // Continuity Plans collection rules
    // - Users can create, read, and delete their own continuity plans.
    match /continuityPlans/{planId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, delete: if request.auth.uid == resource.data.userId;
    }
  }
}
