rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin or superadmin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'superadmin'];
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow any authenticated user to read user profiles (for names, roles, etc.)
      // Allow users to create their own profile during registration
      // Allow users to update their own profile
      // Allow admins to update any user profile
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      // Only admins can delete user documents (from the app)
      allow delete: if isAdmin();
    }
    
    // Rules for the 'roles' collection
    match /roles/{role} {
      // Allow any authenticated user to read which roles are taken
      allow read: if request.auth != null;
      // Allow a user to create a role document (claim a role) if it doesn't exist yet,
      // or if they are taking over their own previously held role (e.g. on re-register)
      // Admins can also manage roles.
      allow write: if request.auth != null && (
                      !exists(/databases/$(database)/documents/roles/$(role)) ||
                      get(/databases/$(database)/documents/roles/$(role)).data.uid == request.auth.uid ||
                      isAdmin()
                    );
    }

    // Rules for the 'surveys' collection
    match /surveys/{surveyId} {
      // Admins can read all surveys.
      // Users can only read their own surveys.
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
      // Users can create surveys for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Users can only update/delete their own surveys. Admins can manage all.
      allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
    }

    // Rules for the 'continuityPlans' collection
    match /continuityPlans/{planId} {
      // Admins can read all plans.
      // Users can only read their own plans.
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
      // Users can create plans for themselves.
      allow create: if request.auth.uid == request.resource.data.userId;
      // Users can only update/delete their own plans. Admins can manage all.
      allow update, delete: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userId);
    }
  }
}
