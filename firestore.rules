rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the requester has a specific role.
    function hasRole(role) {
      // Check if the user is authenticated before trying to access their profile.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }

    // Helper function to check if the requester has one of several roles.
    function hasOneOfRoles(roles) {
      // Check if the user is authenticated.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in roles;
    }

    match /users/{userId} {
      // WARNING: This allows any client to query the users collection.
      // This is necessary for the client-side "isRoleTaken" check during registration
      // because the user is not yet authenticated. This may expose user data in queries.
      // Ensure client-side queries are specific and do not retrieve sensitive lists.
      allow list: if true;

      // Allow a user to read their own profile.
      // Allow admins and superadmins to read any user profile.
      allow get: if request.auth.uid == userId || hasOneOfRoles(['admin', 'superadmin']);

      // Allow a user to create their own user document during registration.
      allow create: if request.auth.uid == userId;
      
      // Only superadmins can update user documents (e.g., change roles).
      allow update: if hasRole('superadmin');
      
      // Only superadmins can delete user documents.
      allow delete: if hasRole('superadmin');
    }

    match /surveys/{surveyId} {
      // Allow authenticated users to create surveys.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow users to read their own surveys.
      // Allow admins and superadmins to read all surveys.
      allow read: if hasOneOfRoles(['admin', 'superadmin']) || (request.auth != null && request.auth.uid == resource.data.userId);

      // Do not allow updates or deletes for now to keep things simple.
      allow update, delete: if false;
    }
  }
}
